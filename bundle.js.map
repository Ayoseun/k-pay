{"version":3,"file":"bundle.js","sources":["src/styles.js","src/widgetListeners.js","src/widget.js","src/main.js"],"sourcesContent":["// Inline CSS styles\nexport const homeStyles = `\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n\n.card {\n    width: 100%;\n    max-width: 65%;\n    background-color: white;\n    border-radius: 2%;\n    box-shadow: 0 4px 8px rgba(40, 41, 41, 0.1);\n    height: auto; \n    box-sizing: border-box;\n    padding-bottom: 3%;\n}\n\n.top-section {\n    display: flex;\n    padding: 20px;\n    justify-content: space-between;\n    margin: 0px 0px 0px 0px;\n    padding: 20px 16px 5px 16px;\n}\n\n.top-left {\n    display: flex;\n    margin: 0px 0px 0px 0px;\n    align-items: center;\n}\n\n.icon {\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n}\n\n.logo-text {\n    font-size: 0.7rem;\n    color: #000;\n    font-family: 'Poppins', sans-serif;\n    font-weight: 400;\n}\n\n.text-row {\n    display: flex;\n    flex-direction: column;\n}\n\n.text-item {\n    font-size: 12px;\n    color: #000;\n    font-weight: 600;\n    font-family: 'Inter', sans-serif;\n}\n\n.top-column-text-amount {\n    font-size: 20px;\n    color: #16A34A;\n    font-family: 'Inter', sans-serif;\n    margin: 10px 0px 0px 20px;\n    font-weight: 500;\n}\n\n.top-right {\n    display: flex;\n    margin: 0px;\n    flex-direction: column;\n    align-items: flex-end;\n}\n\n.text-column {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n}\n\n.subtitle {\n    margin-top: 5px;\n}\n\n.divider {\n    margin: 0px;\n    border: 0;\n    border-top: 0.5px solid #ddd;\n}\n\n.middle-section {\n    display: block;\n    text-align: center;\n    font-family: 'Poppins', sans-serif;\n    font-size: 12px;\n    margin: 20px 0px 20px 0px;\n}\n\n.bottom-section {\n    display: block;\n    margin: 10px 70px 0px 70px;\n}\n\n.dropdown {\n\n    margin-bottom: 2px;\n    overflow: hidden;\n}\n\n.dropdown-header {\n    display: flex;\n    border: 0.5px solid #D0D5DD;\n    border-radius: 5px;\n    align-items: center;\n    padding: 10px;\n    cursor: pointer;\n}\n\n.dropdown-checkbox {\n    appearance: none;\n    -webkit-appearance: none;\n    margin-right: 10px;\n    border: 0.5px solid #D0D5DD;\n    border-radius: 2px;\n    width: 12px;\n    height: 12px;\n    background-color: #FFFFFF;\n    cursor: pointer;\n    position: relative; /* Add this for positioning the checkmark */\n}\n\n\n.dropdown-checkbox:checked {\n    border: 1.1px solid #6cf1ce;\n\n}\n\n/* To add a checkmark when checked */\n.dropdown-checkbox:checked:after {\n    content: '\\u2714'; /* Unicode character for a checkmark */\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #19624C;\n    font-size: 10px; /* Adjust size as needed */\n    line-height: 1;\n}\n\n.dropdown-inner {\n    display: flex;\n    align-items: center;\n}\n\n.dropdown-image {\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n}\n\n.dropdown-image-crypto {\n    width: 16px;\n    height: 16px;\n    margin-right: 10px;\n}\n\n.dropdown-image-others {\n    width: 38px;\n    height: 38px;\n    \n}\n\n.dropdown-text {\n    flex: 1;\n    margin-right: 15px;\n    font-family: 'Poppins', sans-serif;\n    font-size: x-small;\n}\n\n.dropdown-chevron {\n    width: 8px;\n    height: 8px;\n}\n\n.dropdown-chevron {\n    margin-left: auto;\n    font-size: 16px;\n}\n\n.dropdown-content {\n    display: none;\n    width: 100%;\n    box-sizing: border-box;\n    max-height: 350px;\n    overflow-y: auto;\n    scrollbar-width: none; /* For Firefox */\n    -ms-overflow-style: none; /* For Internet Explorer and Edge */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.dropdown-content::-webkit-scrollbar {\n    display: none;\n}\n\n/* Optional: Custom scrollbar styling */\n.dropdown-content {\n    /* Ensure the content has some padding on the right to avoid overlap */\n    padding-right: 20px;\n}\n\n/* Create a custom scrollbar effect */\n.dropdown-content::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 8px;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 4px;\n}\n\n/* Optional: Style the \"thumb\" of the scrollbar */\n.dropdown-content::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 8px;\n    height: 30%; /* Adjust based on content */\n    background: rgba(0, 0, 0, 0.3);\n    border-radius: 4px;\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n\n.dropdown-content:hover::before {\n    opacity: 1;\n}\n.dropdown.open .dropdown-content {\n    display: block;\n}\n\n@media screen and (max-width: 436px) {\n\n    .icon {\n        width: 12px;\n        height: 12px;\n        margin-right: 10px;\n    }\n    \n    .logo-text {\n        font-size: 0.5rem;\n        color: #000;\n        font-family: 'Poppins', sans-serif;\n        font-weight: 400;\n    }\n\n    .text-item {\n        font-size: 0.4rem;\n        color: #000;\n        font-weight: 600;\n        font-family: 'Inter', sans-serif;\n    }\n\n    .top-column-text-amount {\n        font-size: 0.6rem;\n        color: #16A34A;\n        font-family: 'Inter', sans-serif;\n        margin: 10px 0px 0px 20px;\n        font-weight: 500;\n    }\n    .middle-section {\n        display: block;\n        text-align: center;\n        font-family: 'Poppins', sans-serif;\n        font-size: 0.5rem;\n        margin: 20px 0px 20px 0px;\n    }\n    .bottom-section {\n        display: block;\n        margin: 10px 20px 0px 20px;\n    }\n\n    .dropdown-header {\n        display: flex;\n        border: 0.5px solid #D0D5DD;\n        border-radius: 5px;\n        height: 1.95vh;\n        align-items: center;\n        padding: 10px;\n        cursor: pointer;\n    }\n\n    .dropdown-checkbox {\n        appearance: none;\n        -webkit-appearance: none;\n        margin-right: 10px;\n        border: 0.5px solid #D0D5DD;\n        border-radius: 2px;\n        width: 8px;\n        height: 8px;\n        background-color: #FFFFFF;\n        cursor: pointer;\n        position: relative; /* Add this for positioning the checkmark */\n    }\n    .dropdown-text {\n        flex: 1;\n        margin-right: 15px;\n        font-family: 'Poppins', sans-serif;\n        font-size: 0.2rem;\n    }\n\n    .dropdown-image {\n        width: 10px;\n        height: 10px;\n        margin-right: 10px;\n    }\n    \n    .dropdown-image-crypto {\n        width: 10px;\n        height: 10px;\n        margin-right: 10px;\n    }\n    \n    .dropdown-image-others {\n        width: 15px;\n        height: 15px;\n        \n    }\n}\n`\nexport const successStyles = `\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n\n.success-container {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Inter', sans-serif;\n    font-size: 12px;\n    margin: 20px 0px 20px 0px;\n}\n\n.success-container h1 {\n    color: #000;\n    font-size: 16px;\n    font-family: 'Inter', sans-serif;\n    font-weight: 400;\n}\n\n.success-container p {\n    color: #79747E;\n    font-family: 'Inter', sans-serif;\n    font-size: 10px;\n}\n\n.success-container img {\n    margin-bottom: 10px;\n    width: 48px;\n    height: 48px;\n}\n\n.success-container button {\n    width: 60%;\n    padding: 10px;\n    background-color: #19624C;\n    color: white;\n    border: none;\n    font-family: 'Inter', sans-serif;\n    border-radius: 5px;\n    font-size: 10px;\n    cursor: pointer;\n    padding-left: 15px;\n    margin-bottom: 20px;\n    padding-right: 15px;\n\n}\n@media screen and (max-width:436px) {\n    .success-container {\n        display: none;\n        flex-direction: column;\n        align-items: center;\n        font-family: 'Inter', sans-serif;\n        font-size: 0.4rem;\n        margin: 20px 0px 20px 0px;\n    }\n    .success-container h1 {\n        color: #000;\n        font-family: 'Inter', sans-serif;\n        font-size: 0.5rem;\n        font-weight: 400;\n    }\n    \n    .success-container p {\n        color: #79747E;\n        font-family: 'Inter', sans-serif;\n        font-size: 0.35rem;\n    }\n    \n    .success-container img {\n        margin-bottom: 10px;\n        width: 30px;\n        height: 30px;\n    }\n\n    .success-container button {\n        width: 60%;\n        padding: 8px;\n        background-color: #19624C;\n        color: white;\n        border: none;\n        font-family: 'Inter', sans-serif;\n        border-radius: 3px;\n        font-size: 0.5rem;\n        cursor: pointer;\n        padding-left: 15px;\n        margin-bottom: 20px;\n        padding-right: 15px;\n    \n    }\n}\n`\n\nexport const cardFormStyles = `\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n\n\n.card-details {\n    background-color: white;\n    font-family: 'Poppins', sans-serif;\n    display: block;\n\n    width: 100%;\n}\n\n.card-details h2 {\n    font-size: 16px;\n    font-weight: 500;\n    margin: 10px 0px 15px 0px;\n}\n\n.card-details p {\n    color: #0D8D67;\n    font-size: 8px;\n    font-weight: 300;\n    margin: 5px 0px 15px 0px;\n\n}\n\n.card-logo {\n    width: 50px;\n    /* Adjust size as needed */\n    height: auto;\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n\n/* Form field and form field group styling */\n.form-field {\n    margin-bottom: 5px;\n    margin-right: 25px;\n\n}\n\n.form-field-group {\n    margin: 0px 35px 10px 5px;\n\n}\n\n.form-field label,\n.form-field-group label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 12px;\n    font-weight: 300;\n}\n\n/* Wrapper for form inputs and selects */\n.input-wrapper {\n    border: 0.8px solid #E0E5F2;\n    border-radius: 8px;\n    margin-bottom: 10px;\n    padding: 6px;\n    display: flex;\n    width: 107%;\n    background-color: white;\n}\n\n.input-wrapper input[type=\"text\"],\n.input-wrapper input[type=\"number\"],\n.input-wrapper select {\n    width: 107%;\n    border: none;\n    /* Remove internal borders */\n    font-family: 'Poppins', sans-serif;\n    font-size: 12px;\n    font-weight: 100;\n    color: #253A48;\n    outline: none;\n    /* Remove default focus outline */\n}\n\n.input-wrapper input[type=\"text\"]::placeholder,\n.input-wrapper select option {\n    font-size: 10px;\n    font-weight: 100;\n    color: #9A9AAA;\n    width: 120%;\n}\n\n/* Form field group specific styles */\n.form-field-group {\n    display: flex;\n    width: 107%;\n    justify-content: space-between;\n}\n\n.form-field-group .half {\n    width: 100%;\n}\n\n.form-field-group .half .input-wrapper {\n    width: 100%;\n}\n\n\n\n/* Specific styles for state and city selects */\n#state::placeholder,\n#city::placeholder {\n    font-size: 12px;\n    font-weight: 100;\n    color: #253A48;\n}\n\n\n.pay-button {\n    width: 100%;\n    padding: 10px;\n    background-color: #19624C;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    font-size: 14px;\n    cursor: pointer;\n    margin-bottom: 20px;\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n    /* Centers content horizontally */\n    align-items: center;\n    /* Centers content vertically */\n    position: relative;\n}\n\n/* Text styling */\n#button-text {\n    font-size: 14px;\n    font-family: 'Poppins', sans-serif;\n    margin-right: 10px;\n    /* Adds space between text and loader */\n}\n\n/* Loader styling */\n#loader {\n    border: 1px solid #f3f3f3;\n    /* Light grey */\n    border-top: 1px solid #000000;\n    /* Black */\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    animation: spin 1s linear infinite;\n    display: none;\n    /* Initially hidden */\n}\n\n/* Show loader */\n.pay-button.loading #loader {\n    display: inline-block;\n}\n\n@keyframes spin {\n    0% {\n        transform: rotate(0deg);\n    }\n\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n@media screen and (max-width: 436px) {\n    .card-details h2 {\n        font-size: 0.5rem;\n        font-weight: 500;\n        margin: 10px 0px 15px 0px;\n    }\n\n    .card-details p {\n        color: #0D8D67;\n        font-size: 0.3rem;\n        font-weight: 300;\n        margin: 5px 0px 15px 0px;\n\n    }\n\n    .card-logo {\n        width: 20px;\n        /* Adjust size as needed */\n        height: auto;\n        position: absolute;\n        right: 10px;\n        top: 50%;\n        transform: translateY(-50%);\n    }\n\n    .form-field label,\n    .form-field-group label {\n        display: block;\n        margin-bottom: 5px;\n        font-size: 0.4rem;\n        font-weight: 300;\n    }\n\n    /* Wrapper for form inputs and selects */\n    .input-wrapper {\n        border: 0.8px solid #E0E5F2;\n        border-radius: 4px;\n        margin-bottom: 10px;\n        padding: 4px;\n        display: flex;\n        height: 2vh;\n        width: 107%;\n        background-color: white;\n    }\n    .input-wrapper input[type=\"text\"],\n    .input-wrapper input[type=\"number\"],\n    .input-wrapper select {\n        width: 107%;\n        border: none;\n        /* Remove internal borders */\n        font-family: 'Poppins', sans-serif;\n        font-size: 0.6rem;\n        font-weight: 100;\n        color: #253A48;\n        outline: none;\n        /* Remove default focus outline */\n    }\n    .input-wrapper input[type=\"text\"]::placeholder,\n    .input-wrapper select option {\n        font-size: 0.4rem;\n        font-weight: 100;\n        color: #9A9AAA;\n        width: 120%;\n    }\n\n\n    /* Specific styles for state and city selects */\n    #state::placeholder,\n    #city::placeholder {\n        font-size: 0.4rem;\n        font-weight: 100;\n        color: #253A48;\n    }\n\n\n    /* Button styling */\n    .pay-button {\n        width: 100%;\n        padding: 8px;\n        background-color: #19624C;\n        color: white;\n        border: none;\n        border-radius: 3px;\n        font-size: 0.2rem;\n        cursor: pointer;\n        margin-bottom: 20px;\n        margin-top: 20px;\n        display: flex;\n\n        justify-content: center;\n        /* Centers content horizontally */\n        align-items: center;\n        /* Centers content vertically */\n        position: relative;\n    }\n\n    /* Text styling */\n    #button-text {\n        font-size: 0.6rem;\n        font-family: 'Poppins', sans-serif;\n        margin-right: 10px;\n        /* Adds space between text and loader */\n    }\n\n    #loader {\n        border: 1px solid #f3f3f3;\n        /* Light grey */\n        border-top: 1px solid #000000;\n        /* Black */\n        border-radius: 50%;\n        width: 12px;\n        height: 12px;\n        animation: spin 1s linear infinite;\n        display: none;\n        /* Initially hidden */\n    }\n\n}`;\n\nexport const cardPaymentSummaryStyles = `\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Satoshi:wght@400;500;600;700&display=swap');\n.summary-container {\n    background: #fff;\n    padding: 20px;\n\n    display: none;\n    width: auto;\n    text-align: center;\n}\n\n.amount-holder {\n    display: block;\n    flex-direction: column;\n    align-items: center;\n    border: 0.8px solid #E0E5F2;\n    border-radius: 8px;\n    margin: 0px 50px 0px 50px;\n    padding: 12px;\n\n}\n\n.amount-holder h1 {\n    font-size: 18px;\n    color: #19624C;\n    font-family: 'Poppins', sans-serif;\n    margin: 5px 0px 0px 0px;\n}\n\n.amount-holder p {\n    font-size: 10px;\n    color: #677489;\n    margin: 0px;\n    font-family: 'Poppins', sans-serif;\n}\n\nh4 {\n    color: #000;\n    font-size: 12px;\n    font-family: 'Poppins', sans-serif;\n    font-weight: 500;\n}\n\n.summary-details .detail {\n    display: flex;\n    justify-content: space-between;\n    margin: 10px 50px 0px 50px;\n}\n\n.summary-details {\n    margin-bottom: 20px;\n}\n\n.detail.total {\n    font-weight: bold;\n    font-family: 'Poppins', sans-serif;\n}\n\n.detail span {\n    font-size: 10px;\n    color: #000;\n    font-family: 'Poppins', sans-serif;\n    margin: 0px;\n}\n\n\n.detail p {\n    font-size: 10px;\n    color: #677489;\n    margin: 0px;\n    font-family: 'Poppins', sans-serif;\n}\n\n.summary-divider {\n    margin: 30px 50px 0px 50px;\n    border: 0;\n    border-top: 0.5px solid #ddd;\n}\n\n.summary-buttons {\n    display: flex;\n    justify-content: center;\n    margin-top: 30px;\n    gap: 5px;\n    margin-bottom: 30px;\n}\n\n.summary-buttons-confirm {\n    padding: 5px 10px;\n    border: none;\n    background-color: #19624C;\n    color: white;\n    cursor: pointer;\n    border-radius: 3px;\n    font-size: 8px;\n    padding: 5px 40px 5px 40px;\n    font-weight: 300;\n    font-family: 'Poppins', sans-serif;\n}\n\n.summary-buttons-go-back {\n    color: #19624C;\n    font-size: 8px;\n    border: none;\n    cursor: pointer;\n    padding: 5px 40px 5px 40px;\n    font-weight: 300;\n    font-family: 'Poppins', sans-serif;\n    background-color: #CFF1E6;\n}\n\n@media screen and (max-width:540px) {\n    .summary-container {\n        background: #fff;\n        padding: 10px;\n        display: none;\n        width: auto;\n        text-align: center;\n    }\n\n    .amount-holder {\n        display: block;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n        align-items: center;\n        border: 0.8px solid #E0E5F2;\n        border-radius: 8px;\n        margin: 0px 20px 0px 20px;\n        padding: 8px;\n\n    }\n\n    .amount-holder h1 {\n        font-size: 0.8rem;\n        font-family: 'Poppins', sans-serif;\n        color: #19624C;\n        margin: 5px 0px 0px 0px;\n    }\n\n    .amount-holder p {\n        font-size: 0.5rem;\n        font-family: 'Poppins', sans-serif;\n        color: #677489;\n        margin: 0px;\n    }\n\n    h4 {\n        color: #000;\n        font-size: 0.5rem;\n        font-family: 'Poppins', sans-serif;\n        font-weight: 500;\n    }\n\n    .summary-details .detail {\n        display: flex;\n        justify-content: space-between;\n        margin: 10px 10px 0px 10px;\n    }\n\n    .summary-details {\n        margin-bottom: 20px;\n    }\n\n    .detail.total {\n        font-weight: bold;\n\n        font-family: 'Poppins', sans-serif;\n\n    }\n\n    .detail span {\n        font-size: 0.5rem;\n        color: #000;\n        font-family: 'Poppins', sans-serif;\n        margin: 0px;\n    }\n\n\n    .detail p {\n        font-size: 0.5rem;\n        color: #677489;\n        font-family: 'Poppins', sans-serif;\n        margin: 0px;\n    }\n\n    .summary-divider {\n        margin: 30px 10px 0px 10px;\n        border: 0;\n        border-top: 0.5px solid #ddd;\n    }\n\n    .summary-buttons {\n        display: flex;\n        justify-content: center;\n        margin-top: 30px;\n        gap: 5px;\n        margin-bottom: 30px;\n    }\n\n    .summary-buttons-confirm {\n        padding: 5px 10px;\n        border: none;\n        background-color: #19624C;\n        color: white;\n        cursor: pointer;\n        border-radius: 1px;\n        font-size: 0.45rem;\n        padding: 5px 10px 5px 10px;\n        font-weight: 300;\n        font-family: 'Poppins', sans-serif;\n    }\n\n    .summary-buttons-go-back {\n        color: #19624C;\n        font-size: 0.45rem;\n        border: none;\n        cursor: pointer;\n        padding: 2px 25px 2px 25px;\n        font-weight: 300;\n        font-family: 'Poppins', sans-serif;\n        background-color: #CFF1E6;\n    }\n}\n    `\n\nexport const todo = `\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n\n.todo{\nfont-size:0.5rem;\n    color: #677489;\nfont-family:'Poppins'; sans-serif;\n}\n`\n\nexport const pinStyles = `\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n.pin-container {\n    background: #fff;\n    display: none;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 20px;\n    border-radius: 8px;\n    margin-top: 30px;\n\n\n\n}\n\n.pin-container p {\n    color: #000;\n    width: 70%;\n    font-family: 'Inter', sans-serif;\n    font-size: 12px;\n    text-align: center;\n    font-weight: 400;\n}\n\n.pin-inputs input {\n    width: 30px;\n    height: 30px;\n    margin: 10px;\n    font-size: 24px;\n    font-family: 'Inter', sans-serif;\n    text-align: center;\n    border-radius: 5px;\n    border: 0.5px solid #4750B2;\n}\n\n/* Remove the spinner arrows from the number inputs for Chrome, Safari, Edge, and Opera */\n.pin-inputs input[type=\"number\"]::-webkit-outer-spin-button,\ninput[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n\n}\n\n/* Remove the spinner arrows for Firefox */\n.pin-inputs input[type=\"number\"] {\n    -moz-appearance: textfield;\n    outline: none;\n}\n\n.pin-buttons {\n    display: flex;\n    justify-content: center;\n    margin-top: 30px;\n    gap: 5px;\n    margin-bottom: 30px;\n}\n\n.pin-continue {\n    padding: 5px 10px;\n    border: none;\n    background-color: #19624C;\n    color: white;\n    cursor: pointer;\n    border-radius: 3px;\n    font-size: 10px;\n    padding: 5px 50px 5px 50px;\n    font-weight: 300;\n    font-family: 'Poppins', sans-serif;\n}\n\n.pin-back {\n    color: #19624C;\n    font-size: 10px;\n    padding: 5px 50px 5px 50px;\n    font-weight: 300;\n    border: none;\n    cursor: pointer;\n    font-family: 'Poppins', sans-serif;\n    background-color: #CFF1E6;\n}\n\n@media screen and (max-width: 436px) {\n    .pin-container {\n        background: #fff;\n        display: none;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 10px;\n        border-radius: 8px;\n        margin-top: 30px;\n    \n    \n    \n    }\n    .pin-container  p{\n        color: #000;\n        width: 100%;\n        font-family: 'Poppins', sans-serif;\n        font-size: 0.5rem;\n        text-align: center;\n        font-weight: 400;\n    }\n    .pin-inputs input {\n        width: 13%;\n        height:3vh;\n        margin: 5px;\n        font-size: 0.5rem;\n        font-family: 'Inter', sans-serif;\n    text-align: center;\n        border-radius: 2px;\n        border: 0.5px solid #4750B2;\n    }\n    .pin-buttons {\n        display: flex;\n        justify-content: center;\n        margin-top: 30px;\n        gap: 7px;\n        margin-bottom: 30px;\n    }\n\n    .pin-continue {\n        padding: 5px 10px;\n        border: none;\n        background-color: #19624C;\n        color: white;\n        cursor: pointer;\n        border-radius: 2px;\n        font-size: 0.45rem;\n        padding: 5px 20px 5px 20px;\n        font-weight: 300;\n        font-family: 'Poppins', sans-serif;\n    }\n\n    .pin-back {\n        color: #19624C;\n        font-size: 0.45rem;\n        padding: 5px 20px 5px 20px;\n        font-weight: 300;\n        border: none;\n        border-radius: 2px;\n        cursor: pointer;\n        font-family: 'Poppins', sans-serif;\n        background-color: #CFF1E6;\n    }\n}`","export function initializeEventListeners() {\n    document.querySelectorAll('.dropdown-header').forEach(header => {\n        header.addEventListener('click', function () {\n            const dropdown = this.parentElement;\n\n            // Close all other dropdowns\n            document.querySelectorAll('.dropdown').forEach(d => {\n                if (d !== dropdown) {\n                    d.classList.remove('open');\n                    d.querySelector('.dropdown-checkbox').checked = false;\n                }\n            });\n\n            // Toggle the clicked dropdown\n            dropdown.classList.toggle('open');\n            dropdown.querySelector('.dropdown-checkbox').checked = dropdown.classList.contains('open');\n        });\n    });\n\n\n    //Cards\n   // document.addEventListener('DOMContentLoaded', () => {\n        const cardNumberInput = document.getElementById('card-number');\n        const cardHolderNameInput = document.getElementById('cardholder-name')\n        const cvcInput = document.getElementById('cvc');\n        const cardLogo = document.getElementById('card-logo');\n        const expiryDateInput = document.getElementById('expiry-date');\n        const pinContainer = document.getElementById('pin-container')\n        const cardDetails = document.getElementById('card-details')\n        const summaryContainer = document.getElementById('summary-container')\n        const successContainer = document.getElementById('success-container')\n        const middleContainer = document.getElementById('middle-section')\n        const bottomContainer = document.getElementById('bottom-section')\n        const summaryConfirmBtn = document.getElementById('summary-buttons-confirm')\n        const summaryBackBtn = document.getElementById('summary-buttons-go-back')\n        const pinBackBtn = document.getElementById('pin-back')\n        const pinBtnContinue = document.getElementById('pin-continue')\n        const closeBtn = document.getElementById('close-payment')\n\n        // Disable button and show spinner if fields are empty\n        const payButton = document.getElementById('pay-button');\n        const buttonText = document.getElementById('button-text');\n        const spinner = document.getElementById('loader');\n\n        const inputs = document.querySelectorAll('.pin-inputs input');\n\n        inputs.forEach((input, index) => {\n            input.addEventListener('input', () => {\n                if (input.value.length === 1 && index < inputs.length - 1) {\n                    // Move to the next input\n                    inputs[index + 1].focus();\n                }\n            });\n\n            // Optionally handle the backspace to move to the previous input\n            input.addEventListener('keydown', (e) => {\n                if (e.key === \"Backspace\" && input.value === \"\" && index > 0) {\n                    inputs[index - 1].focus();\n                }\n            });\n        });\n        // Format Expiry Date to MM/YY as user types\n        expiryDateInput.addEventListener('input', (e) => {\n            let value = e.target.value.replace(/\\D/g, ''); // Only allow digits\n\n            if (value.length >= 2) {\n                let month = value.slice(0, 2);\n\n                // Validate the month part (01-12)\n                if (parseInt(month, 10) > 12) {\n                    month = '12'; // If invalid month, set it to 12\n                }\n                value = month + '/' + value.slice(2, 4); // Insert slash for MM/YY\n            }\n\n            e.target.value = value.slice(0, 5); // Max length: 5 (MM/YY)\n\n        });\n        // Function to update card logo based on card number\n        function updateCardLogo() {\n            const cardNumber = cardNumberInput.value.replace(/\\s+/g, '');\n            if (cardNumber.startsWith('47') || cardNumber.startsWith('44') || cardNumber.startsWith('41') || cardNumber.startsWith('40')) {\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/visa.svg'; // Visa\n            } else if (cardNumber.startsWith('51') || cardNumber.startsWith('53') || cardNumber.startsWith('55') || cardNumber.startsWith('22')) {\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/mastercard.svg'; // MasterCard\n            } else if (cardNumber.startsWith('622126') || cardNumber.startsWith('65') || cardNumber.startsWith('60')) {\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/discover.svg'; // Discover\n            } else if (cardNumber.startsWith('37')) {\n\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/americanExpress.svg'; // Maestro\n            } else if (cardNumber.startsWith('623') || cardNumber.startsWith('622127')) {\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/unionpay.svg'; // Maestro\n            } else if (cardNumber.startsWith('36') || cardNumber.startsWith('38')) {\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/diners.svg'; // Maestro\n            } else {\n                cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/card.svg'; // Default\n            }\n        }\n\n        // Add event listener to card number input\n        cardNumberInput.addEventListener('input', updateCardLogo);\n\n        // Restrict CVV input to exactly 3 digits\n        cvcInput.addEventListener('input', () => {\n            if (cvcInput.value.length > 3) {\n                cvcInput.value = cvcInput.value.slice(0, 3);\n            }\n        });\n\n        // Fetch and populate countries\n        fetch('https://restcountries.com/v3.1/all')\n            .then(response => response.json())\n            .then(data => {\n                console.log('Countries fetched:', data.length);\n                const countrySelect = document.getElementById('country');\n                countrySelect.innerHTML = '<option value=\"\">Select Country</option>';\n                // Sort the countries by their common names in ascending order\n                data.sort((a, b) => a.name.common.localeCompare(b.name.common));\n\n                data.forEach(country => {\n                    const option = document.createElement('option');\n                    option.value = country.name.common;\n                    option.textContent = country.name.common;\n                    countrySelect.appendChild(option);\n                });\n            })\n            .catch(error => console.error('Error fetching countries:', error));\n\n        // Fetch and populate states based on selected country\n        document.getElementById('country').addEventListener('change', (event) => {\n            const countryName = event.target.value;\n            console.log('Selected country:', countryName);\n\n            if (!countryName) {\n                console.log('No country selected, clearing state and city dropdowns');\n                document.getElementById('state').innerHTML = '<option value=\"\">Select State</option>';\n                document.getElementById('city').innerHTML = '<option value=\"\">Select City</option>';\n                return;\n            }\n\n            fetch('https://countriesnow.space/api/v0.1/countries/states', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ country: countryName })\n            })\n                .then(response => {\n                    console.log('State API response status:', response.status);\n                    return response.json();\n                })\n                .then(data => {\n                    console.log('State data received:', data);\n                    const stateSelect = document.getElementById('state');\n                    stateSelect.innerHTML = '<option value=\"\">Select State</option>';\n                    if (data.data && data.data.states) {\n                        console.log('Number of states:', data.data.states.length);\n                        data.data.states.forEach(state => {\n                            const option = document.createElement('option');\n                            option.value = state.name;\n                            option.textContent = state.name;\n                            stateSelect.appendChild(option);\n                        });\n                    } else {\n                        console.log('No states found in the response');\n                    }\n                    // Clear city dropdown when country changes\n                    document.getElementById('city').innerHTML = '<option value=\"\">Select City</option>';\n                })\n                .catch(error => {\n                    console.error('Error fetching states:', error);\n                    alert('Error fetching states. Please check the console for details.');\n                });\n        });\n\n        // Fetch and populate cities based on selected state\n        document.getElementById('state').addEventListener('change', (event) => {\n            const countryName = document.getElementById('country').value;\n            const stateName = event.target.value;\n            console.log('Selected country for city fetch:', countryName);\n            console.log('Selected state for city fetch:', stateName);\n\n            if (!stateName) {\n                console.log('No state selected, clearing city dropdown');\n                document.getElementById('city').innerHTML = '<option value=\"\">Select City</option>';\n                return;\n            }\n\n            fetch('https://countriesnow.space/api/v0.1/countries/state/cities', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ country: countryName, state: stateName })\n            })\n                .then(response => {\n                    console.log('City API response status:', response.status);\n                    return response.json();\n                })\n                .then(data => {\n                    console.log('City data received:', data);\n                    const citySelect = document.getElementById('city');\n                    citySelect.innerHTML = '<option value=\"\">Select City</option>';\n                    if (data.data) {\n                        console.log('Number of cities:', data.data.length);\n                        data.data.forEach(city => {\n                            const option = document.createElement('option');\n                            option.value = city;\n                            option.textContent = city;\n                            citySelect.appendChild(option);\n                        });\n                    } else {\n                        console.log('No cities found in the response');\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching cities:', error);\n                    alert('Error fetching cities. Please check the console for details.');\n                });\n        });\n\n        summaryConfirmBtn.addEventListener('click', (event) => {\n            successContainer.style.display = 'flex';\n            summaryContainer.style.display = 'none';\n            middleContainer.style.display = 'none';\n            bottomContainer.style.display = 'none';\n        })\n\n        function resetForm() {\n            // Clear input fields\n            cardNumberInput.value = '';\n            cardHolderNameInput.value = '';\n            cvcInput.value = '';\n            expiryDateInput.value = '';\n            inputs.forEach(input => input.value = '');\n            // Reset the card logo\n            cardLogo.src = 'https://ayoseun.github.io/k-pay/assets/card.svg'; // Default\n\n            // Uncheck any checkboxes in dropdowns\n            document.querySelectorAll('.dropdown-checkbox').forEach(checkbox => {\n                checkbox.checked = false;\n            });\n\n            // Close all dropdowns\n            document.querySelectorAll('.dropdown').forEach(dropdown => {\n                dropdown.classList.remove('open');\n            });\n\n            // Clear country, state, and city dropdowns\n            document.getElementById('country').selectedIndex = 0;\n            document.getElementById('state').innerHTML = '<option value=\"\">Select State</option>';\n            document.getElementById('city').innerHTML = '<option value=\"\">Select City</option>';\n        }\n\n        // Handle the click event for the close button\n        closeBtn.addEventListener('click', (event) => {\n            // Hide the success container and show the other containers\n            successContainer.style.display = 'none';\n            cardDetails.style.display = 'block';\n            middleContainer.style.display = 'block';\n            bottomContainer.style.display = 'block';\n            summaryContainer.style.display = 'none';\n            // Call the resetForm function to clear values and revert to default state\n            resetForm();\n        });\n\n        summaryBackBtn.addEventListener('click', (event) => {\n            summaryContainer.style.display = 'none';\n            cardDetails.style.display = 'block';\n        })\n        pinBtnContinue.addEventListener('click', (event) => {\n            pinContainer.style.display = 'none';\n            summaryContainer.style.display = 'block';\n\n        })\n        pinBackBtn.addEventListener('click', (event) => {\n            pinContainer.style.display = 'none';\n            cardDetails.style.display = 'block';\n        })\n        // Function to get IP address\n        window. getIpAddress  = async function() {\n            return fetch('https://api.ipify.org?format=json')\n                .then(response => response.json())\n                .then(data => data.ip)\n                .catch(() => '0.0.0.0'); // Default IP if unable to fetch\n        }\n\n        // Form submission\n        window.submitPayment = async function () {\n\n            const expiryPattern = /^(0[1-9]|1[0-2])\\/(0[1-9]|[1-9][0-9])$/; // MM/YY format\n            const isValidExpiry = expiryPattern.test(expiryDateInput.value);\n\n            if (!isValidExpiry) {\n                alert('Invalid expiry date format. Use MM/YY.');\n                return;\n            }\n\n            const [month, year] = expiryDateInput.value.split('/');\n            const expiryMonth = parseInt(month, 10);\n            const expiryYear = parseInt(year, 10);\n\n            const currentDate = new Date();\n            const currentYear = currentDate.getFullYear() % 100; // Last two digits of the current year (YY format)\n            const currentMonth = currentDate.getMonth() + 1; // Current month (1-12)\n\n            // Check if the year is in the past\n            if (expiryYear < currentYear || (expiryYear === currentYear && expiryMonth < currentMonth)) {\n                alert('The expiry date must be later than the current date.');\n                return;\n            }\n\n            if (!cvcInput.value || !cardHolderNameInput.value || !expiryDateInput.value || !cardNumberInput.value) {\n                alert('Please fill in all required fields.');\n                return;\n            }\n\n            // Get the IP address\n            const ipAddress = await getIpAddress();\n            buttonText.style.display = 'none'; // Hide button text\n            spinner.style.display = 'flex'; // Show spinner\n            payButton.style.backgroundColor = '#000';\n            payButton.disabled = true; // Disable the button\n            // Collect form data\n            // Collect form data\n            const formData = {\n                amount: \"200\", // Fixed amount for example; adjust as needed\n                currency: \"USD\",\n                paymentOption: {\n                    card: {\n                        cardNumber: cardNumberInput.value.replace(/\\s+/g, ''),\n                        cardHolderName: cardHolderNameInput.value,\n                        expirationMonth: month,\n                        expirationYear: `20${year}`, // Assuming the year is provided as YY\n                        CVV: cvcInput.value,\n                        threeD: {\n                            methodNotificationUrl: \"<methodNotificationURL>\" // Replace with actual URL\n                        }\n                    }\n                },\n                deviceDetails: {\n                    ipAddress: ipAddress // Use the fetched IP address\n                }\n            };\n\n            fetch('https://dumm.onrender.com/initiate-payment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Payment initiated successfully', data);\n                    payButton.disabled = false; // Re-enable the button\n                    buttonText.style.display = 'inline'; // Show button text\n                    spinner.style.display = 'none'; // Hide spinner\n                    payButton.style.backgroundColor = '#19624C';\n\n                    if (data.transactionStatus === \"DECLINED\") {\n                        alert(`Card declined. Reason: ${data.transactionStatus}`);\n\n\n                    } else {\n                        if (data.paymentOption.card.threeD.version !== null) {\n                            cardDetails.style.display = 'none';\n                            // document.getElementById('middle-section').style.display = 'none';\n                            // document.getElementById('bottom-section').style.display = 'none';\n                            pinContainer.style.display = 'flex';\n                        } else {\n                            cardDetails.style.display = 'none';\n                            // document.getElementById('middle-section').style.display = 'none';\n                            // document.getElementById('bottom-section').style.display = 'none';\n                            summaryContainer.style.display = 'block';\n                        }\n                    }\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                    // Handle error (e.g., show an error message)\n                });\n        };\n\n\n   // });\n}","import { cardFormStyles, cardPaymentSummaryStyles, homeStyles, pinStyles, successStyles, todo } from './styles.js';\nimport { initializeEventListeners } from './widgetListeners.js';  // Import the event listeners logic\n\n\n// Top Section HTML\nconst getTopSection = (amount) => `\n  <div class=\"top-section\">\n    <div class=\"top-left\">\n      <img src=\"https://ayoseun.github.io/k-pay/assets/logo.svg\" alt=\"Logo Head\" class=\"icon\">\n      <div class=\"text-row\">\n        <div class=\"logo-text\">Orokiipay</div>\n      </div>\n    </div>\n    <div class=\"top-right\">\n      <div class=\"text-column\">\n        <div class=\"text-item\">Pay</div>\n        <div class=\"top-column-text-amount\" id=\"amount-to-pay\">$${amount}</div>\n      </div>\n    </div>\n  </div>\n  <hr class=\"divider\">\n`;\n\n// Middle Section HTML\nconst getMiddleSection = () => `\n  <div class=\"middle-section\" id=\"middle-section\">Choose Payment Method</div>\n`;\n\n// Bottom Section HTML\nconst getBottomSection = (amount) => `\n\n  <div class=\"bottom-section\" id=\"bottom-section\">\n            <div class=\"dropdown\" id=\"dropdown-1\">\n                <div class=\"dropdown-header\">\n                    <input type=\"checkbox\" class=\"dropdown-checkbox\">\n                    <div class=\"dropdown-inner\">\n                        <div class=\"dropdown-text\">Pay with Cards</div>\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/visa.svg\" alt=\"Image 1\" class=\"dropdown-image\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/mastercard.svg\" alt=\"Image 1\" class=\"dropdown-image\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/discover.svg\" alt=\"Image 1\" class=\"dropdown-image\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/maestro.svg\" alt=\"Image 1\" class=\"dropdown-image\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/americanExpress.svg\" alt=\"Image 1\" class=\"dropdown-image\">\n                    </div>\n\n\n                    <img src=\"https://ayoseun.github.io/k-pay/assets/chev.svg\" alt=\"Image 1\" class=\"dropdown-chevron\">\n                </div>\n                <div class=\"dropdown-content\">\n\n\n                    <div class=\"card-details\" id=\"card-details\">\n                        <h2>Card Details</h2>\n                        <div class=\"form-field\">\n                            <label for=\"cardholder-name\">Cardholder's name</label>\n                            <div class=\"input-wrapper\">\n                                <input type=\"text\" id=\"cardholder-name\" placeholder=\"As seen on your card\">\n                            </div>\n                        </div>\n                        <div class=\"form-field\">\n                            <label for=\"card-number\">Enter Card Number</label>\n                            <div class=\"input-wrapper\">\n                                <input type=\"text\" id=\"card-number\" placeholder=\"5078 0000 0000 0000\" maxlength=\"19\"\n                                    required>\n                                <img src=\"https://ayoseun.github.io/k-pay/assets/card.svg\" alt=\"Card Logo\" class=\"card-logo\" id=\"card-logo\">\n                            </div>\n                        </div>\n                        <div class=\"form-field-group\">\n                            <div class=\"form-field half\">\n                                <label for=\"expiry-date\">Expiry Date</label>\n                                <div class=\"input-wrapper\">\n                                    <input type=\"text\" id=\"expiry-date\" placeholder=\"MM/YY\"\n                                        pattern=\"^(0[1-9]|1[0-2])\\/(0[1-9]|[1-9][0-9])$\" required>\n                                </div>\n                            </div>\n                            <div class=\"form-field half\">\n                                <label for=\"cvc\">CVC</label>\n                                <div class=\"input-wrapper\">\n                                    <input type=\"number\" id=\"cvc\" placeholder=\"712\" maxlength=\"3\" required>\n                                </div>\n                            </div>\n                        </div>\n\n                        <h2>Billing Address</h2>\n                        <p>We only require this information once for this card</p>\n                        <div class=\"form-field\">\n                            <label for=\"country\">Country</label>\n                            <div class=\"input-wrapper\">\n                                <select id=\"country\">\n                                    <!-- Options will be populated dynamically -->\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form-field-group\">\n                            <div class=\"form-field half\">\n                                <label for=\"state\">State</label>\n                                <div class=\"input-wrapper\">\n                                    <select id=\"state\">\n                                        <!-- Options will be populated dynamically -->\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form-field half\">\n                                <label for=\"city\">City</label>\n                                <div class=\"input-wrapper\">\n                                    <select id=\"city\">\n\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-field\">\n                            <label for=\"address1\">Address 1</label>\n                            <div class=\"input-wrapper\">\n                                <input type=\"text\" id=\"address1\" placeholder=\"Input address\">\n                            </div>\n                        </div>\n                        <div class=\"form-field\">\n                            <label for=\"address2\">Address 2 (optional)</label>\n                            <div class=\"input-wrapper\">\n                                <input type=\"text\" id=\"address2\" placeholder=\"Input address (optional)\">\n                            </div>\n                        </div>\n                        <div class=\"form-field\">\n                            <label for=\"zip\">Zip Code</label>\n                            <div class=\"input-wrapper\">\n                                <input type=\"number\" id=\"zip\" placeholder=\"Enter code here\">\n                            </div>\n                        </div>\n                        \n                         <button class=\"pay-button\" id=\"pay-button\" onclick=\"submitPayment()\">\n                            <span id=\"button-text\">Pay $${amount}</span>\n                            <div id=\"loader\"></div>\n                        </button>\n                    </div>\n\n                    <div class=\"pin-container\" id=\"pin-container\">\n                        <p>Please enter your 4-digit card pin to authorize this payment</p>\n                        <div class=\"pin-inputs\">\n                            <input  maxlength=\"1\" pattern=\"[0-9]*\" inputmode=\"numeric\">\n                            <input  maxlength=\"1\" pattern=\"[0-9]*\" inputmode=\"numeric\">\n                            <input  maxlength=\"1\" pattern=\"[0-9]*\" inputmode=\"numeric\">\n                            <input  maxlength=\"1\" pattern=\"[0-9]*\" inputmode=\"numeric\">\n                        </div>\n                        <div class=\"pin-buttons\">\n                            <button class=\"pin-back\" id=\"pin-back\">Go Back</button>\n                            <button class=\"pin-continue\" id=\"pin-continue\">Continue</button>\n                        </div>\n                    </div>\n                    <div class=\"summary-container\" id=\"summary-container\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/checkout.svg\" alt=\"Image 1\" style=\"width: 48px;height: 48px;\">\n                        <h4>Payment Summary</h4>\n                        <div class=\"amount-holder\">\n                            <p>Amount</p>\n                            <h1>$${amount}</h1>\n                        </div>\n                        <div class=\"summary-details\">\n\n                            <div class=\"detail\">\n                                <p>Subtotal</p><span>$4105.00</span>\n                            </div>\n                            <div class=\"detail\">\n                                <p>Shipping Cost</p><span>$408.00</span>\n                            </div>\n                            <div class=\"detail\">\n                                <p>Discount (10%)</p><span>-$13.00</span>\n                            </div>\n                            <hr class=\"summary-divider\">\n                            <div class=\"detail total\"><span>Total</span><span>$${amount}</span></div>\n                        </div>\n                        <div class=\"summary-buttons\">\n                            <button class=\"summary-buttons-go-back\" id=\"summary-buttons-go-back\">Go Back</button>\n                            <button class=\"summary-buttons-confirm\" id=\"summary-buttons-confirm\">Confirm\n                                Payment</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"dropdown\" id=\"dropdown-2\">\n                <div class=\"dropdown-header\">\n                    <input type=\"checkbox\" class=\"dropdown-checkbox\">\n                    <div class=\"dropdown-inner\">\n                        <div class=\"dropdown-text\">Pay with Crypto</div>\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/bitcoin.svg\" alt=\"Image 1\" class=\"dropdown-image-crypto\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/ethereum.svg\" alt=\"Image 1\" class=\"dropdown-image-crypto\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/usdc.svg\" alt=\"Image 1\" class=\"dropdown-image-crypto\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/usdt.svg\" alt=\"Image 1\" class=\"dropdown-image-crypto\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/sol.svg\" alt=\"Image 1\" class=\"dropdown-image-crypto\">\n                    </div>\n\n\n                    <img src=\"https://ayoseun.github.io/k-pay/assets/chev.svg\" alt=\"Image 1\" class=\"dropdown-chevron\">\n                </div>\n                 <div class=\"dropdown-content\"><p class=\"todo\">In progress</p></div>\n            </div>\n            <div class=\"dropdown\" id=\"dropdown-3\">\n                <div class=\"dropdown-header\">\n                    <input type=\"checkbox\" class=\"dropdown-checkbox\">\n\n                    <div class=\"dropdown-text\">Pay with Bank Account</div>\n                    <img src=\"https://ayoseun.github.io/k-pay/assets/chev.svg\" alt=\"Image 1\" class=\"dropdown-chevron\">\n                </div>\n                <div class=\"dropdown-content\"><p class=\"todo\">In progress</p></div>\n            </div>\n            <div class=\"dropdown\" id=\"dropdown-4\">\n                <div class=\"dropdown-header\">\n                    <input type=\"checkbox\" class=\"dropdown-checkbox\">\n                    <div class=\"dropdown-inner\">\n                        <div class=\"dropdown-text\">Pay with</div>\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/applePay.svg\" alt=\"Image 1\" class=\"dropdown-image-others\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/googlePay.svg\" alt=\"Image 1\" class=\"dropdown-image-others\">\n                        <img src=\"https://ayoseun.github.io/k-pay/assets/paypal.svg\" alt=\"Image 1\" class=\"dropdown-image-others\">\n\n                    </div>\n\n\n                    <img src=\"https://ayoseun.github.io/k-pay/assets/chev.svg\" alt=\"Image 1\" class=\"dropdown-chevron\">\n                </div>\n                <div class=\"dropdown-content\"><p class=\"todo\">In progress</p></div>\n            </div>\n        </div>\n\n\n`;\n\n// Success Section HTML\nconst getSuccessSection = (amount) => `\n  <div class=\"success-container\" id=\"success-container\">\n    <h1>Payment Completed</h1>\n    <p>The payment of $${amount} has been received successfully</p>\n    <img src=\"https://ayoseun.github.io/k-pay/assets/success.svg\" alt=\"Icon\">\n    <button id=\"close-payment\">Close</button>\n  </div>\n`;\n\n// Main Widget Creation Function\nexport function createWidget(amount) {\n    const widget = document.createElement('div');\n    widget.classList.add('widget-container', 'card');\n\n\n\n    // Create and append styles\n    const styles = [\n        homeStyles,\n        successStyles,\n        cardFormStyles,\n        cardPaymentSummaryStyles,\n        pinStyles,\n        todo\n    ];\n\n    styles.forEach((styleContent, index) => {\n        const style = document.createElement('style');\n        style.appendChild(document.createTextNode(styleContent));\n        document.head.appendChild(style);\n    });\n    if (amount == null) {\n        amount = \"0.0\"\n    } else {\n\n    }\n    // Append each section to the widget container\n    widget.innerHTML = `\n    ${getTopSection(amount)}\n    ${getMiddleSection()}\n    ${getBottomSection(amount)}\n    ${getSuccessSection(amount)}\n  `;\n\n    // Add event listeners or other interactions here\n\n\n    // Append the widget to the body (or any other target container)\n    document.body.appendChild(widget);\n    initializeEventListeners()\n    return widget\n}\n","\nimport { createWidget } from './widget.js';\n\nexport { createWidget };"],"names":["_0x3d1785","_0x1bff","_0x1de6","_0x5857c3","_0x42f70c","_0x60d697","_0x511450","parseInt","_0x52ea6d","cardFormStyles","initializeEventListeners","document","_0x395d98","_0x4e67e9","this","_0x822a3d","_0x3c8cbe","_0xe1ab62","_0x1a068f","_0x1ba0c1","_0x1c75e4","_0x2541d5","_0x8232eb","_0x2e4c2f","_0x36f3ec","_0x268fc1","_0xc1d81b","_0x46d607","_0x58b389","_0x5abec0","_0x4accb3","_0xeec6b8","_0x595303","_0x225f65","_0xa78743","_0x155a7a","_0x56c0d7","_0x33a0fb","_0x12d134","_0x4b9f42","_0x6fa7a3","_0x1b3888","_0x24ca01","_0xa3d870","_0x22d04d","fetch","_0x5b3b74","_0x500251","console","_0x4a93ac","_0x27d45b","_0x3ce05e","_0x12a031","_0x3f5bba","_0x41d5bc","_0x4d8e68","_0x4e87ac","JSON","_0x35b36f","_0x4250bd","_0x2b8ddb","_0xd7f7a0","_0x1b139b","_0x3b4b56","alert","_0x2b3359","_0x3e8f9b","_0x391dbb","_0x5cabff","_0x4155a3","_0x4ac49a","_0x1c8984","_0x48ec6b","_0x1cfdd6","_0x2bf040","_0x2d6a75","_0x4c2916","_0x3707cc","_0x29253c","_0x2cb9d3","_0x16b350","_0x241f2c","_0x5f27c2","window","async","_0x52d992","_0x331b4d","_0x32059f","_0x5e35c0","_0x5c5782","_0x21f3d5","_0x3694d5","_0x1d1561","Date","_0x914482","_0x3de2c0","_0x4a716e","getIpAddress","_0x5da883","_0x193ed4","_0x51c793","_0x5eb99b","_0x9baa87","_0x30fc","_0x43739","_0x3a72dc","_0x7218da","_0x7218","_0x30fc34","_0x583c0d","_0x410adf","_0x384d17","_0x1eb4b1","_0x4ff3e2","_0x1b0c","_0x96e5ce","_0x40d676","_0x2da0fd","_0x2da0","_0x1b0c99","_0x2f5cdb","_0x165e84","_0x7804b1","_0x27e0a5","_0x492b45","_0x1ffc6b","_0x289ac0","_0x1d5d49","_0x4c739c","_0x24b2f6","_0x1ff918","_0x58aa60","getMiddleSection","_0x21eaad","getSuccessSection","_0x18484c"],"mappings":"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"}