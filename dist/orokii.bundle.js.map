{"version":3,"file":"orokii.bundle.js","sources":["../src/scripts/initOrokiipayWidget.js"],"sourcesContent":["function initOrokiipayWidget(container) {\n    // Initialize widget UI inside the container\n    container.innerHTML = `\n      <div id=\"payment-form\">\n        <div class=\"dropdown-header\">Payment Methods</div>\n        <div class=\"dropdown\">\n          <input type=\"checkbox\" class=\"dropdown-checkbox\">\n          <div class=\"dropdown-content\">Card Payment Form Goes Here</div>\n        </div>\n        <!-- Card details and form elements -->\n        <input type=\"text\" id=\"card-number\" placeholder=\"Card Number\">\n        <input type=\"text\" id=\"cardholder-name\" placeholder=\"Cardholder Name\">\n        <input type=\"text\" id=\"expiry-date\" placeholder=\"MM/YY\">\n        <input type=\"text\" id=\"cvc\" placeholder=\"CVC\">\n        <button id=\"submit-payment\">Submit Payment</button>\n      </div>\n    `;\n  \n    console.log(\"Orokiipay Widget Initialized\");\n  \n    // Now attach the dropdown and form handlers inside this function\n  \n    // Dropdown handler\n    document.querySelectorAll('.dropdown-header').forEach(header => {\n      header.addEventListener('click', function () {\n        const dropdown = this.parentElement;\n  \n        // Close other dropdowns\n        document.querySelectorAll('.dropdown').forEach(d => {\n          if (d !== dropdown) {\n            d.classList.remove('open');\n            d.querySelector('.dropdown-checkbox').checked = false;\n          }\n        });\n  \n        // Toggle the clicked dropdown\n        dropdown.classList.toggle('open');\n        dropdown.querySelector('.dropdown-checkbox').checked = dropdown.classList.contains('open');\n      });\n    });\n  \n    // Attach card form logic (card logo, validation, etc.)\n    const cardNumberInput = document.getElementById('card-number');\n    const cardLogo = document.getElementById('card-logo'); // Assuming you have a card logo somewhere\n    const cvcInput = document.getElementById('cvc');\n    const expiryDateInput = document.getElementById('expiry-date');\n  \n    // Format Expiry Date\n    expiryDateInput.addEventListener('input', (e) => {\n      let value = e.target.value.replace(/\\D/g, ''); // Only digits allowed\n      if (value.length >= 2) {\n        let month = value.slice(0, 2);\n        if (parseInt(month, 10) > 12) month = '12'; // Max month is 12\n        value = month + '/' + value.slice(2, 4); // Format MM/YY\n      }\n      e.target.value = value.slice(0, 5); // Limit length\n    });\n  \n    // Card logo based on card number\n    cardNumberInput.addEventListener('input', () => {\n      const cardNumber = cardNumberInput.value.replace(/\\s+/g, '');\n      if (cardNumber.startsWith('4')) {\n        cardLogo.src = './assets/visa.svg'; // Visa\n      } else if (cardNumber.startsWith('5')) {\n        cardLogo.src = './assets/mastercard.svg'; // MasterCard\n      } else {\n        cardLogo.src = './assets/visa.svg'; // Default\n      }\n    });\n  \n    // CVC Input length restriction\n    cvcInput.addEventListener('input', () => {\n      if (cvcInput.value.length > 3) {\n        cvcInput.value = cvcInput.value.slice(0, 3);\n      }\n    });\n  \n    // Form submission\n    document.getElementById('submit-payment').addEventListener('click', submitForm);\n  }\n  \n  window.Orokiipay = { initOrokiipayWidget };\n  \n  // Submit form logic\n  async function submitForm() {\n    const cardNumberInput = document.getElementById('card-number');\n    const cardHolderNameInput = document.getElementById('cardholder-name');\n    const expiryDateInput = document.getElementById('expiry-date');\n    const cvcInput = document.getElementById('cvc');\n    \n    const expiryPattern = /^(0[1-9]|1[0-2])\\/(0[1-9]|[1-9][0-9])$/;\n    const isValidExpiry = expiryPattern.test(expiryDateInput.value);\n    \n    if (!isValidExpiry) {\n      alert('Invalid expiry date. Please use MM/YY format.');\n      return;\n    }\n    \n    const [month, year] = expiryDateInput.value.split('/');\n    const expiryMonth = parseInt(month, 10);\n    const expiryYear = parseInt(year, 10) + 2000;\n  \n    const ipAddress = await getIpAddress(); // Function to get IP address\n    \n    const formData = {\n      cardNumber: cardNumberInput.value,\n      cardHolderName: cardHolderNameInput.value,\n      expirationMonth: expiryMonth,\n      expirationYear: expiryYear,\n      cvc: cvcInput.value,\n      ipAddress: ipAddress\n    };\n  \n    console.log('Form data:', formData);\n    \n    // Submit form data to the API\n    fetch('https://example.com/api/payment', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(formData)\n    })\n      .then(response => response.json())\n      .then(data => console.log('Payment success:', data))\n      .catch(error => console.error('Payment failed:', error));\n  }\n  \n  // Function to get the user's IP address\n  async function getIpAddress() {\n    try {\n      const response = await fetch('https://api.ipify.org?format=json');\n      const data = await response.json();\n      return data.ip;\n    } catch (error) {\n      console.error('Failed to get IP address', error);\n      return '0.0.0.0';\n    }\n  }\n  "],"names":["async","submitForm","cardNumberInput","document","getElementById","cardHolderNameInput","expiryDateInput","cvcInput","test","value","alert","month","year","split","expiryMonth","parseInt","expiryYear","ipAddress","response","fetch","json","ip","error","console","getIpAddress","formData","cardNumber","cardHolderName","expirationMonth","expirationYear","cvc","log","method","headers","body","JSON","stringify","then","data","catch","window","Orokiipay","initOrokiipayWidget","container","innerHTML","querySelectorAll","forEach","header","addEventListener","dropdown","this","parentElement","d","classList","remove","querySelector","checked","toggle","contains","cardLogo","e","target","replace","length","slice","startsWith","src"],"mappings":"yBAoFEA,eAAeC,IACb,MAAMC,EAAkBC,SAASC,eAAe,eAC1CC,EAAsBF,SAASC,eAAe,mBAC9CE,EAAkBH,SAASC,eAAe,eAC1CG,EAAWJ,SAASC,eAAe,OAKzC,IAHsB,yCACcI,KAAKF,EAAgBG,OAIvD,YADAC,MAAM,iDAIR,MAAOC,EAAOC,GAAQN,EAAgBG,MAAMI,MAAM,KAC5CC,EAAcC,SAASJ,EAAO,IAC9BK,EAAaD,SAASH,EAAM,IAAM,IAElCK,QAyBRjB,iBACE,IACE,MAAMkB,QAAiBC,MAAM,qCAE7B,aADmBD,EAASE,QAChBC,EACb,CAAC,MAAOC,GAEP,OADAC,QAAQD,MAAM,2BAA4BA,GACnC,SACR,CACL,CAlC4BE,GAElBC,EAAW,CACfC,WAAYxB,EAAgBO,MAC5BkB,eAAgBtB,EAAoBI,MACpCmB,gBAAiBd,EACjBe,eAAgBb,EAChBc,IAAKvB,EAASE,MACdQ,UAAWA,GAGbM,QAAQQ,IAAI,aAAcN,GAG1BN,MAAM,kCAAmC,CACvCa,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAKnB,GAAYA,EAASE,SAC1BiB,MAAKC,GAAQf,QAAQQ,IAAI,mBAAoBO,KAC7CC,OAAMjB,GAASC,QAAQD,MAAM,kBAAmBA,IACpD,CA3CDkB,OAAOC,UAAY,CAAEC,oBAjFvB,SAA6BC,GAEzBA,EAAUC,UAAY,grBAgBtBrB,QAAQQ,IAAI,gCAKZ5B,SAAS0C,iBAAiB,oBAAoBC,SAAQC,IACpDA,EAAOC,iBAAiB,SAAS,WAC/B,MAAMC,EAAWC,KAAKC,cAGtBhD,SAAS0C,iBAAiB,aAAaC,SAAQM,IACzCA,IAAMH,IACRG,EAAEC,UAAUC,OAAO,QACnBF,EAAEG,cAAc,sBAAsBC,SAAU,EACjD,IAIHP,EAASI,UAAUI,OAAO,QAC1BR,EAASM,cAAc,sBAAsBC,QAAUP,EAASI,UAAUK,SAAS,OAC3F,GAAQ,IAIJ,MAAMxD,EAAkBC,SAASC,eAAe,eAC1CuD,EAAWxD,SAASC,eAAe,aACnCG,EAAWJ,SAASC,eAAe,OACjBD,SAASC,eAAe,eAGhC4C,iBAAiB,SAAUY,IACzC,IAAInD,EAAQmD,EAAEC,OAAOpD,MAAMqD,QAAQ,MAAO,IAC1C,GAAIrD,EAAMsD,QAAU,EAAG,CACrB,IAAIpD,EAAQF,EAAMuD,MAAM,EAAG,GACvBjD,SAASJ,EAAO,IAAM,KAAIA,EAAQ,MACtCF,EAAQE,EAAQ,IAAMF,EAAMuD,MAAM,EAAG,EACtC,CACDJ,EAAEC,OAAOpD,MAAQA,EAAMuD,MAAM,EAAG,EAAE,IAIpC9D,EAAgB8C,iBAAiB,SAAS,KACxC,MAAMtB,EAAaxB,EAAgBO,MAAMqD,QAAQ,OAAQ,IACrDpC,EAAWuC,WAAW,KACxBN,EAASO,IAAM,oBACNxC,EAAWuC,WAAW,KAC/BN,EAASO,IAAM,0BAEfP,EAASO,IAAM,mBAChB,IAIH3D,EAASyC,iBAAiB,SAAS,KAC7BzC,EAASE,MAAMsD,OAAS,IAC1BxD,EAASE,MAAQF,EAASE,MAAMuD,MAAM,EAAG,GAC1C,IAIH7D,SAASC,eAAe,kBAAkB4C,iBAAiB,QAAS/C,EACrE"}